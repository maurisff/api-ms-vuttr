name: CD Test, Build and Deploy Heroku App and Push docker Images
on:
  push:
    tags:
      - '*'
jobs:
  Test-Stage:
    name: Test code for build and deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.14.1
        uses: actions/setup-node@v1
        with:
          node-version: 12.14.1
      - name: Get Node_Modules cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install
      - name: Run test pre Build Image
        env:
          NODE_ENV: test
          JWT_SECRET: test
          MONGO_DB: ${{ secrets.MONGO_DB_TEST }}
        run: npm run test
  DeployHerokuApp:
    name: Build and Deploy to Heroku App
    runs-on: ubuntu-latest
    needs: Test-Stage
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.14.1
        uses: actions/setup-node@v1
        with:
          node-version: 12.14.1
      - name: Get Node_Modules cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install
      - name: Run Build
        run: npm run build
      - name: Deploy to Heroku App
        uses: akhileshns/heroku-deploy@v3.8.9
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "api-ms-vuttr"
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          procfile: "web: npm start"
  BuildDockerImage:
    name: Build and push Docker Images
    runs-on: ubuntu-latest
    needs: Test-Stage
    steps:
      - uses: actions/checkout@v2
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            mauriciosff/api-ms-vuttr:${{ steps.vars.outputs.tag }}
            mauriciosff/api-ms-vuttr:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}